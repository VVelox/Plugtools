#!perl

use strict;
use warnings;
use Getopt::Std;
use Plugtools;

$Getopt::Std::STANDARD_HELP_VERSION = 1;

#version function
sub main::VERSION_MESSAGE {
	print "plgclean 0.0.0\n";
}

#print help
sub main::HELP_MESSAGE {
	print "\n" . "\n"
		. "For more info, see the the perldocs for Plugtools and plgclean...\n"
		. "perldoc plgclean\n"
		. "perldoc Plugtools\n";
}

#gets the options
my %opts = ();
getopts( 'l', \%opts );

my $pt = Plugtools->new;
if ( $pt->{error} ) {
	warn('plgadd:254: Failed to initialize the Plugtools object');
	exit $pt->{error};
}

$pt->groupClean( { dump => $opts{l} } );
if ( $pt->{error} ) {
	warn('plgclean: groupClean errored');
	exit $pt->{error};
}
exit 0;

=head1 NAME

plgclean - Check groups setup in LDAP for non-existent users and remove them.

=head1 SYNOPSIS

plgclean [B<-l>]

=head1 SWITCHES

=head2 -l

If this is specified, any modified entry is printed to STDOUT.

=head1 EXIT CODES

If Plugtools encounters an error, the exit code is the returned error code.

=head1 ACKNOWLEDGEMENTS

=head1 LICENSE AND COPYRIGHT

This software is Copyright (c) 2023 by Zane C. Bowers-Hadley.

This is free software, licensed under:

  The Artistic License 2.0 (GPL Compatible)

=cut
