#!perl

use strict;
use warnings;
use Getopt::Std;
use Plugtools;

$Getopt::Std::STANDARD_HELP_VERSION = 1;

#version function
sub main::VERSION_MESSAGE {
	print "plumod 0.1.0\n";
}

#print help
sub main::HELP_MESSAGE {
	print "\n"
		. "-u <user>  - The user to remove.\n"
		. "-a <action>  - The action to perform.\n"
		. "-g <GID>  - The GID to change the user to.\n"
		. "-U <UID>  - The UID to change.\n"
		. "-c <GECOS>  - The GECOS to set the user to.\n"
		. "-l  - Print any changes to LDAP.\n" . "\n"
		. "actions:\n"
		. "gecos - Change the GECOS field for a user.\n"
		. "gid - Change the primary GID for a user.\n"
		. "uid - Change the UID for a user.\n"
		. "shell - Change the shell for a user.\n" . "\n"
		. "For more info, see the the perldocs for Plugtools and plurm...\n"
		. "perldoc plurm\n"
		. "perldoc Plugtools\n";
} ## end sub main::HELP_MESSAGE

#gets the options
my %opts = ();
getopts( 'u:a:g:U:c:ls:', \%opts );

if ( !defined( $opts{u} ) ) {
	warn('plumod:254: No user name specified');
	exit 254;
}

if ( !defined( $opts{u} ) ) {
	warn('plumod:253: No action specified');
	exit 253;
}

my $pt = Plugtools->new;
if ( $pt->{error} ) {
	warn('plumod: Failed to initialize the Plugtools object');
	exit $pt->{error};
}

if ( $opts{a} eq 'gecos' ) {
	$pt->userGECOSchange(
		{
			user  => $opts{u},
			gecos => $opts{c},
			dump  => $opts{l},
		}
	);
	if ( $pt->{error} ) {
		warn('plumod: Failed to modify the user');
		exit $pt->{error};
	}
} ## end if ( $opts{a} eq 'gecos' )

if ( $opts{a} eq 'shell' ) {
	$pt->userShellChange(
		{
			user  => $opts{u},
			shell => $opts{s},
			dump  => $opts{l},
		}
	);
	if ( $pt->{error} ) {
		warn('plumod: Failed to modify the the user');
		exit $pt->{error};
	}
} ## end if ( $opts{a} eq 'shell' )

if ( $opts{a} eq 'gid' ) {
	$pt->userGIDchange(
		{
			user => $opts{u},
			gid  => $opts{g},
			dump => $opts{l},
		}
	);
	if ( $pt->{error} ) {
		warn('plumod: Failed to modify the user');
		exit $pt->{error};
	}
} ## end if ( $opts{a} eq 'gid' )

if ( $opts{a} eq 'uid' ) {
	$pt->userGIDchange(
		{
			user => $opts{u},
			uid  => $opts{U},
			dump => $opts{l},
		}
	);
	if ( $pt->{error} ) {
		warn('plumod: Failed to fail to modify the user');
		exit $pt->{error};
	}
} ## end if ( $opts{a} eq 'uid' )

exit 0;

=head1 NAME

plumod - Modify a user in LDAP.

=head1 SYNOPSIS

plumod B<-a> gecos B<-u> <user> B<-c> <gecos> [B<-l>]
plumod B<-a> gid B<-u> <user> B<-g> <GID> [B<-l>]
plumod B<-a> shell B<-u> <user> B<-s> <shell> [B<-l>]
plumod B<-a> uid B<-u> <user> B<-U> <UID> [B<-l>]

=head1 SWITCHES

=head2 -a <action>

The action to perfom.

=head3 actions

=head4 gecos

Change the GECOS for a user.

=head4 gid

Change the gid for a user.

=head4 shell

Change the shell for a user.

=head4 uid

Change the UID for a user.

=head2 -c <gecos>

Specifiy the new GECOS for a user.

=head2 -g <GID>

The new GID for a user.

=head2 -s <shell>

The new shell for a user.

=head2 -u <user>

This specifies the user to modify.

=head2 -U <UID>

The new UID for a user.

=head1 EXIT CODES

If the exit code is not listed below, it is what was the error code returned by Plugtools.

=head2 254

No user specified.

=head2 253

No action specified.

=head1 ACKNOWLEDGEMENTS

=head1 LICENSE AND COPYRIGHT

This software is Copyright (c) 2023 by Zane C. Bowers-Hadley.

This is free software, licensed under:

  The Artistic License 2.0 (GPL Compatible)

=cut
